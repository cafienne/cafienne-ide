version: 2.1
workflows:
  ci:
    jobs:
      - branch-build-to-snapshot:
          context: automation-context
          filters:
            tags:
              ignore: /.*/
            branches:
              ignore:
                - main
      - main-build-to-latest:
          context: automation-context
          filters:
            branches:
              only:
                - main

jobs:
  branch-build-to-snapshot:
    machine:
      image: ubuntu-2404:2024.11.1
      docker_layer_caching: true
    resource_class: large
    working_directory: ~/cafienne-ide
    steps:
      - build-and-publish:
          tag: cafienne/ide:snapshot

  main-build-to-latest:
    machine:
      image: ubuntu-2404:2024.11.1
      docker_layer_caching: true
    resource_class: large
    working_directory: ~/cafienne-ide
    steps:
      - build-and-publish:
          tag: cafienne/ide:latest

commands:
  install:
    steps:
      - restore_cache:
          name: Restore Yarn Package Cache
          keys:
            - yarn-packages-v3-{{ checksum "yarn.lock" }}
            - yarn-packages-v3-
      - run:
          name: Installing dependencies
          command: |
            yarn install --immutable
      - save_cache:
          name: Save Yarn Package Cache
          key: yarn-packages-v3-{{ checksum "yarn.lock" }}
          paths:
            - node_modules
  build:
    parameters:
      tag:
        type: string
    steps:
      - run:
          name: Yarn build
          command: |
            yarn build
      - run:
          name: Build docker image
          command: |
            echo "Building docker image <<parameters.tag>>"
            pwd
            ls -l dist
            docker build -t <<parameters.tag>> .
  test:
    parameters:
      tag:
        type: string
    steps:
      - run:
          name: Spin up docker image
          command: |
            chmod 777 ./repository
            chmod 777 ./repository_deploy
            docker run --pull never --name case_designer -d -p 3081:2081 -v ./repository:/usr/src/app/repository -v ./repository_deploy:/usr/src/app/repository_deploy <<parameters.tag>>
      - run:
          name: Docker logs
          when: on_fail
          command: |
            docker logs case_designer
      - run:
          name: Test docker image
          command: |
            yarn test
      - run:
          name: Docker logs
          when: on_fail
          command: |
            docker logs case_designer
      - run:
          name: Test compilation
          command: |
            yarn run test-compile
      - store_test_results:
          path: ./dist/test-results
      - store_artifacts:
          path: ./dist/test-results
      - store_artifacts:
          path: ./dist/deploy_for_compare
  build-and-publish:
    parameters:
      tag:
        type: string
    steps:
      - run:
            name: config CRLF for git
            command: |
              git config --global core.autocrlf true
      - checkout
      - install
      - build:
          tag: <<parameters.tag>>
      - test:
          tag: <<parameters.tag>>
      - run:
          name: Push docker image '<<parameters.tag>>'
          command: |
            echo $DOCKER_PASS | docker login -u $DOCKER_USER --password-stdin
            echo "Publishing image '<<parameters.tag>>' to docker hub"
            docker push <<parameters.tag>>
